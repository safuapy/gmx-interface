/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  SubaccountApproval,
  SubaccountApprovalInterface,
} from "../SubaccountApproval";

const _abi = [
  {
    type: "tuple",
    components: [
      {
        name: "subaccount",
        type: "address",
      },
      {
        name: "shouldAdd",
        type: "bool",
      },
      {
        name: "expiresAt",
        type: "uint256",
      },
      {
        name: "maxAllowedCount",
        type: "uint256",
      },
      {
        name: "actionType",
        type: "bytes32",
      },
      {
        name: "nonce",
        type: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
      },
    ],
  },
] as const;

export class SubaccountApproval__factory {
  static readonly abi = _abi;
  static createInterface(): SubaccountApprovalInterface {
    return new Interface(_abi) as SubaccountApprovalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubaccountApproval {
    return new Contract(address, _abi, runner) as unknown as SubaccountApproval;
  }
}
